name: Pipeline CI/CD
run-name: Pipeline CI/CD executada por ${{ github.actor }} em ${{ github.run_number }}

on: 
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps: 
      - name: Obtendo o código do projeto
        uses: actions/checkout@v4
      
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.300"

      - name: Execução do comando build
        working-directory: ./src
        run: dotnet build Review-Filmes.sln

  tests:
    needs: [build]
    uses: Marod12/desafio-cicd-01/.github/workflows/tests.yml@main
    secrets: inherit

  release:
    name: Criação de Release
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
    - name: Obtendo o código do projeto
      uses: actions/checkout@v4

    - name: Analise do Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ./src/Review-Filmes.Web/Dockerfile

    - name: Set up QEMU for multi-platform builds
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Autenticação no Docker Hub
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push image
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 \
          -f ./src/Review-Filmes.Web/Dockerfile \
          -t marod12/pipeline-0-master:v${{ github.run_number }} \
          -t marod12/pipeline-0-master:latest \
          --push .

    - name: Scan com trivy
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'image'
        image-ref: 'marod12/pipeline-0-master:v${{ github.run_number }}'
        format: 'sarif'
        output: trivy-docker-result.sarif
        severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

    - name: Upload do arquivo trivy para o github
      uses: github/codeql-action/upload-sarif@v3
      with:
        category: docker-result
        sarif_file: trivy-docker-result.sarif

  deploy-homolog:
    needs: [release]
    uses: Marod12/desafio-cicd-01/.github/workflows/deploy.yml@main
    secrets: inherit
    with:
      environment-name: homolog
      environment-url: http://homolog-desafio-cicd-01.marod.dev

  test-e2e:
    name: Teste end to end
    runs-on: ubuntu-latest
    needs: [deploy-homolog]
    environment:
      name: homolog
    container:
      image: fabricioveronez/webdriver-dotnet:chrome
      env:
        BASE_URL: "http://${{ vars.BASE_URL }}"
    steps:
    - name: Obtendo o código do projeto
      uses: actions/checkout@v4

    - name: Executando o teste end to end
      working-directory: ./src
      run: dotnet test Review-Filmes.Test.EndToEnd/Review-Filmes.Test.EndToEnd.csproj

  deploy-prod:
    needs: [test-e2e]
    uses: Marod12/desafio-cicd-01/.github/workflows/deploy.yml@main
    secrets: inherit
    with:
      environment-name: prod
      environment-url: http://desafio-cicd-01.marod.dev
